version: '3.8'

services:
  # Frontend Service
  patrion-frontend:
    build:
      context: ./patrion-frontend
      dockerfile: Dockerfile
    container_name: patrion-frontend
    restart: always
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - NEXT_PUBLIC_API_URL=${NEXT_PUBLIC_API_URL:-http://18.184.139.251:3001/}
      - NEXT_PUBLIC_WEBSOCKET_URL=${NEXT_PUBLIC_WEBSOCKET_URL:-ws://18.184.139.251:3001/}
    networks:
      - patrion-network
    depends_on:
      - api

  # PostgreSQL Veritabanı
  postgres:
    image: postgres:latest
    container_name: patrion_postgres
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: patrion_case_study
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - patrion-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

  # NestJS API
  api:
    build:
      context: ./patrion-backend-case-nodejs
      dockerfile: Dockerfile
    container_name: patrion_api
    restart: always
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=development
      - DB_HOST=postgres
      - DB_PORT=5432
      - DB_USERNAME=postgres
      - DB_PASSWORD=postgres
      - DB_DATABASE=patrion_case_study
      - JWT_SECRET=patrion_case_study
      - JWT_REFRESH_SECRET=patrion_case_study_refresh
      # MQTT Configuration - TLS enabled
      - MQTT_HOST=mosquitto
      - MQTT_PORT=8883
      - MQTT_USE_TLS=true
      - MQTT_URL=mqtts://mosquitto:8883
      - PORT=3001
    volumes:
      - ./patrion-backend-case-nodejs/ssl:/app/ssl
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - patrion-network

  # Mosquitto MQTT Broker
  mosquitto:
    image: eclipse-mosquitto:latest
    container_name: patrion_mosquitto
    ports:
      - "1883:1883" # MQTT
      - "8883:8883" # MQTT over TLS/SSL
      - "9001:9001" # MQTT over WebSockets
    volumes:
      - ./patrion-backend-case-nodejs/mosquitto/config:/mosquitto/config
      - ./patrion-backend-case-nodejs/mosquitto/data:/mosquitto/data
      - ./patrion-backend-case-nodejs/mosquitto/log:/mosquitto/log
      - ./patrion-backend-case-nodejs/ssl:/mosquitto/certs
    networks:
      - patrion-network

  # Mosquitto Client için Test Aracı
  mosquitto-client:
    image: eclipse-mosquitto:latest
    container_name: patrion_mosquitto_client
    entrypoint: /bin/sh
    tty: true
    depends_on:
      - mosquitto
    networks:
      - patrion-network
    volumes:
      - ./patrion-backend-case-nodejs/mqtt-scripts:/mqtt-scripts
      - ./patrion-backend-case-nodejs/ssl:/mosquitto/certs

  # MQTT Explorer - Web Tabanlı MQTT İzleme Aracı
  mqtt-explorer:
    image: smeagolworms4/mqtt-explorer
    container_name: patrion_mqtt_explorer
    ports:
      - "4000:4000"
    environment:
      - HTTP_PORT=4000
      - DEFAULT_HOST=mosquitto
      - DEFAULT_PORT=8883
      - DEFAULT_SSL=true
    depends_on:
      - mosquitto
    networks:
      - patrion-network

networks:
  patrion-network:
    driver: bridge

volumes:
  postgres_data: 